DECLARE @DatabaseName NVARCHAR(128)
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TableName NVARCHAR(128)
DECLARE @IndexName NVARCHAR(128)
DECLARE @IndexId INT
DECLARE @IsUnique BIT
DECLARE @IsClustered BIT
DECLARE @HasFilter BIT
DECLARE @FilterDefinition NVARCHAR(MAX)
DECLARE @FF INT -- Changed FillFactor to FF
DECLARE @IgnoreDupKey BIT
DECLARE @IsPadded BIT
DECLARE @IsDisabled BIT
DECLARE @AllowPageLocks BIT
DECLARE @AllowRowLocks BIT
DECLARE @DataSpaceId INT
DECLARE @ColumnList NVARCHAR(MAX)
DECLARE @IncludedColumnList NVARCHAR(MAX)
DECLARE @STATISTICS_NORECOMPUTE BIT = 0
DECLARE @SORT_IN_TEMPDB BIT = 0
DECLARE @DROP_EXISTING BIT = 0
DECLARE @ONLINE BIT = 0
DECLARE @OPTIMIZE_FOR_SEQUENTIAL_KEY BIT = 0

-- Table to store results
IF OBJECT_ID('tempdb..#IndexScripts') IS NOT NULL
    DROP TABLE #IndexScripts

CREATE TABLE #IndexScripts (
    DatabaseName NVARCHAR(128),
    TableName NVARCHAR(128),
    IndexScript NVARCHAR(MAX)
)

-- Cursor to iterate through each database
DECLARE DatabaseCursor CURSOR FOR
SELECT name
FROM sys.databases
WHERE state_desc = 'ONLINE'
      AND name NOT IN ('master', 'tempdb', 'model', 'msdb') -- Exclude system databases

OPEN DatabaseCursor
FETCH NEXT FROM DatabaseCursor INTO @DatabaseName

WHILE @@FETCH_STATUS = 0
BEGIN
    SET @SQL = ''
    SET @SQL = @SQL + 'USE [' + @DatabaseName + ']; '
    SET @SQL = @SQL + 'DECLARE IndexCursor CURSOR FOR '
    SET @SQL = @SQL + 'SELECT '
    SET @SQL = @SQL + 't.name AS TableName, '
    SET @SQL = @SQL + 'i.name AS IndexName, '
    SET @SQL = @SQL + 'i.index_id AS IndexId, '
    SET @SQL = @SQL + 'i.is_unique AS IsUnique, '
    SET @SQL = @SQL + 'i.type AS IsClustered, '
    SET @SQL = @SQL + 'i.has_filter AS HasFilter, '
    SET @SQL = @SQL + 'i.filter_definition AS FilterDefinition, '
    SET @SQL = @SQL + 'i.fill_factor AS FF, ' -- Changed FillFactor to FF
    SET @SQL = @SQL + 'i.ignore_dup_key AS IgnoreDupKey, '
    SET @SQL = @SQL + 'i.is_padded AS IsPadded, '
    SET @SQL = @SQL + 'i.is_disabled AS IsDisabled, '
    SET @SQL = @SQL + 'i.allow_page_locks AS AllowPageLocks, '
    SET @SQL = @SQL + 'i.allow_row_locks AS AllowRowLocks, '
    SET @SQL = @SQL + 'i.data_space_id AS DataSpaceId '
    SET @SQL = @SQL + 'FROM '
    SET @SQL = @SQL + 'sys.tables t '
    SET @SQL = @SQL + 'INNER JOIN sys.indexes i ON t.object_id = i.object_id '
    SET @SQL = @SQL + 'WHERE '
    SET @SQL = @SQL + 'i.type IN (1, 2) ' -- Clustered and Non-Clustered indexes
    SET @SQL = @SQL + 'ORDER BY '
    SET @SQL = @SQL + 't.name, i.name; '

    SET @SQL = @SQL + 'OPEN IndexCursor; '
    SET @SQL = @SQL + 'FETCH NEXT FROM IndexCursor INTO @TableName, @IndexName, @IndexId, @IsUnique, @IsClustered, @HasFilter, @FilterDefinition, @FF, @IgnoreDupKey, @IsPadded, @IsDisabled, @AllowPageLocks, @AllowRowLocks, @DataSpaceId; '

    SET @SQL = @SQL + 'WHILE @@FETCH_STATUS = 0 '
    SET @SQL = @SQL + 'BEGIN '
    SET @SQL = @SQL + 'SELECT @ColumnList = STRING_AGG(c.name, '', '') '
    SET @SQL = @SQL + 'FROM '
    SET @SQL = @SQL + 'sys.index_columns ic '
    SET @SQL = @SQL + 'INNER JOIN sys.columns c ON ic.object_id = c.object_id AND ic.column_id = c.column_id '
    SET @SQL = @SQL + 'WHERE '
    SET @SQL = @SQL + 'ic.object_id = OBJECT_ID(@TableName) AND ic.index_id = @IndexId AND ic.is_included_column = 0; '

    SET @SQL = @SQL + 'SELECT @IncludedColumnList = STRING_AGG(c.name, '', '') '
    SET @SQL = @SQL + 'FROM '
    SET @SQL = @SQL + 'sys.index_columns ic '
    SET @SQL = @SQL + 'INNER JOIN sys.columns c ON ic.object_id = c.object_id AND ic.column_id = c.column_id '
    SET @SQL = @SQL + 'WHERE '
    SET @SQL = @SQL + 'ic.object_id = OBJECT_ID(@TableName) AND ic.index_id = @IndexId AND ic.is_included_column = 1; '

    SET @SQL = @SQL + 'SET @SQL = ''CREATE '' + '
    SET @SQL = @SQL + 'CASE @IsUnique '
    SET @SQL = @SQL + 'WHEN 1 THEN ''UNIQUE '' '
    SET @SQL = @SQL + 'ELSE '''' '
    SET @SQL = @SQL + 'END + '

    SET @SQL = @SQL + 'CASE @IsClustered '
    SET @SQL = @SQL + 'WHEN 1 THEN ''CLUSTERED '' '
    SET @SQL = @SQL + 'WHEN 2 THEN ''NONCLUSTERED '' '
    SET @SQL = @SQL + 'END + '

    SET @SQL = @SQL + '''INDEX ['' + @IndexName + ''] ON ['' + OBJECT_SCHEMA_NAME(OBJECT_ID(@TableName)) + ''].['' + @TableName + ''] ('' + @ColumnList + '')''; '

    SET @SQL = @SQL + 'IF @IncludedColumnList IS NOT NULL '
    SET @SQL = @SQL + 'BEGIN '
    SET @SQL = @SQL + 'SET @SQL = @SQL + '' INCLUDE ('' + @IncludedColumnList + '')''; '
    SET @SQL = @SQL + 'END '

    SET @SQL = @SQL + 'SET @SQL = @SQL + '' WITH (PAD_INDEX = '' + CASE WHEN @IsPadded = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + '
    SET @SQL = @SQL + '''STATISTICS_NORECOMPUTE = '' + CASE WHEN @STATISTICS_NORECOMPUTE = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + '
    SET @SQL = @SQL + '''SORT_IN_TEMPDB = '' + CASE WHEN @SORT_IN_TEMPDB = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + '
    SET @SQL = @SQL + '''DROP_EXISTING = '' + CASE WHEN @DROP_EXISTING = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + '
    SET @SQL = @SQL + '''ONLINE = '' + CASE WHEN @ONLINE = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + '
    SET @SQL = @SQL + '''ALLOW_ROW_LOCKS = '' + CASE WHEN @AllowRowLocks = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + '
    SET @SQL = @SQL + '''ALLOW_PAGE_LOCKS = '' + CASE WHEN @AllowPageLocks = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + '
    SET @SQL = @SQL + '''OPTIMIZE_FOR_SEQUENTIAL_KEY = '' + CASE WHEN @OPTIMIZE_FOR_SEQUENTIA
