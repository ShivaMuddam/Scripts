DECLARE @IndexScript NVARCHAR(MAX) = '';

-- Generate scripts to create or rebuild indexes
SELECT @IndexScript = @IndexScript +
    'IF EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(''' + QUOTENAME(SCHEMA_NAME(t.schema_id)) + '.' + QUOTENAME(t.name) + ''') AND name = ''' + i.name + ''')
    BEGIN
        ALTER INDEX ' + QUOTENAME(i.name) + ' ON ' + QUOTENAME(SCHEMA_NAME(t.schema_id)) + '.' + QUOTENAME(t.name) + ' REBUILD;
    END
    ELSE
    BEGIN
        CREATE ' + CASE WHEN i.is_unique = 1 THEN 'UNIQUE ' ELSE '' END + 'INDEX ' + QUOTENAME(i.name) + ' ON ' + QUOTENAME(SCHEMA_NAME(t.schema_id)) + '.' + QUOTENAME(t.name) + '(' + 
        STUFF((SELECT ', ' + QUOTENAME(c.name)
               FROM sys.index_columns ic
               JOIN sys.columns c ON ic.object_id = c.object_id AND ic.column_id = c.column_id
               WHERE ic.object_id = i.object_id AND ic.index_id = i.index_id
               ORDER BY ic.key_ordinal
               FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 2, '') + ') ' +
        ISNULL('INCLUDE (' + 
        STUFF((SELECT ', ' + QUOTENAME(c.name)
               FROM sys.index_columns ic
               JOIN sys.columns c ON ic.object_id = c.object_id AND ic.column_id = c.column_id
               WHERE ic.object_id = i.object_id AND ic.index_id = i.index_id AND ic.is_included_column = 1
               ORDER BY ic.index_column_id
               FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 2, '') + ')', '') + ';
    END
    ' + CHAR(13)
FROM sys.indexes i
INNER JOIN sys.tables t ON i.object_id = t.object_id
WHERE i.type IN (1, 2) AND i.is_primary_key = 0 AND i.is_unique_constraint = 0;

PRINT @IndexScript;
-- EXEC sp_executesql @IndexScript; -- Uncomment to execute
