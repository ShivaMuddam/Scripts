DECLARE @DatabaseName NVARCHAR(128)
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TableName NVARCHAR(128)
DECLARE @IndexName NVARCHAR(128)
DECLARE @IndexId INT
DECLARE @IsUnique BIT
DECLARE @IsClustered BIT
DECLARE @HasFilter BIT
DECLARE @FilterDefinition NVARCHAR(MAX)
DECLARE @FF INT -- Changed FillFactor to FF
DECLARE @IgnoreDupKey BIT
DECLARE @IsPadded BIT
DECLARE @IsDisabled BIT
DECLARE @AllowPageLocks BIT
DECLARE @AllowRowLocks BIT
DECLARE @DataSpaceId INT
DECLARE @ColumnList NVARCHAR(MAX)
DECLARE @IncludedColumnList NVARCHAR(MAX)
DECLARE @STATISTICS_NORECOMPUTE BIT = 0
DECLARE @SORT_IN_TEMPDB BIT = 0
DECLARE @DROP_EXISTING BIT = 0
DECLARE @ONLINE BIT = 0
DECLARE @OPTIMIZE_FOR_SEQUENTIAL_KEY BIT = 0

-- Table to store results
IF OBJECT_ID('tempdb..#IndexScripts') IS NOT NULL
    DROP TABLE #IndexScripts

CREATE TABLE #IndexScripts (
    DatabaseName NVARCHAR(128),
    TableName NVARCHAR(128),
    IndexScript NVARCHAR(MAX)
)

-- Cursor to iterate through each database
DECLARE DatabaseCursor CURSOR FOR
SELECT name
FROM sys.databases
WHERE state_desc = 'ONLINE'
      AND name NOT IN ('master', 'tempdb', 'model', 'msdb') -- Exclude system databases

OPEN DatabaseCursor
FETCH NEXT FROM DatabaseCursor INTO @DatabaseName

WHILE @@FETCH_STATUS = 0
BEGIN
    SET @SQL = 'USE [' + @DatabaseName + ']; ' +
               'DECLARE IndexCursor CURSOR FOR ' +
               'SELECT ' +
               't.name AS TableName, ' +
               'i.name AS IndexName, ' +
               'i.index_id AS IndexId, ' +
               'i.is_unique AS IsUnique, ' +
               'i.type AS IsClustered, ' +
               'i.has_filter AS HasFilter, ' +
               'i.filter_definition AS FilterDefinition, ' +
               'i.fill_factor AS FF, ' + -- Changed FillFactor to FF
               'i.ignore_dup_key AS IgnoreDupKey, ' +
               'i.is_padded AS IsPadded, ' +
               'i.is_disabled AS IsDisabled, ' +
               'i.allow_page_locks AS AllowPageLocks, ' +
               'i.allow_row_locks AS AllowRowLocks, ' +
               'i.data_space_id AS DataSpaceId ' +
               'FROM ' +
               'sys.tables t ' +
               'INNER JOIN sys.indexes i ON t.object_id = i.object_id ' +
               'WHERE ' +
               'i.type IN (1, 2) ' + -- Clustered and Non-Clustered indexes
               'ORDER BY ' +
               't.name, i.name; ' +
               'OPEN IndexCursor; ' +
               'FETCH NEXT FROM IndexCursor INTO @TableName, @IndexName, @IndexId, @IsUnique, @IsClustered, @HasFilter, @FilterDefinition, @FF, @IgnoreDupKey, @IsPadded, @IsDisabled, @AllowPageLocks, @AllowRowLocks, @DataSpaceId; ' +
               'WHILE @@FETCH_STATUS = 0 ' +
               'BEGIN ' +
               'SELECT @ColumnList = STRING_AGG(c.name, '', '') ' +
               'FROM ' +
               'sys.index_columns ic ' +
               'INNER JOIN sys.columns c ON ic.object_id = c.object_id AND ic.column_id = c.column_id ' +
               'WHERE ' +
               'ic.object_id = OBJECT_ID(@TableName) AND ic.index_id = @IndexId AND ic.is_included_column = 0; ' +
               'SELECT @IncludedColumnList = STRING_AGG(c.name, '', '') ' +
               'FROM ' +
               'sys.index_columns ic ' +
               'INNER JOIN sys.columns c ON ic.object_id = c.object_id AND ic.column_id = c.column_id ' +
               'WHERE ' +
               'ic.object_id = OBJECT_ID(@TableName) AND ic.index_id = @IndexId AND ic.is_included_column = 1; ' +
               'SET @SQL = ''CREATE '' + ' +
               'CASE @IsUnique ' +
               'WHEN 1 THEN ''UNIQUE '' ' +
               'ELSE '''' ' +
               'END + ' +
               'CASE @IsClustered ' +
               'WHEN 1 THEN ''CLUSTERED '' ' +
               'WHEN 2 THEN ''NONCLUSTERED '' ' +
               'END + ' +
               '''INDEX ['' + @IndexName + ''] ON ['' + OBJECT_SCHEMA_NAME(OBJECT_ID(@TableName)) + ''].['' + @TableName + ''] ('' + @ColumnList + '')''; ' +
               'IF @IncludedColumnList IS NOT NULL ' +
               'BEGIN ' +
               'SET @SQL = @SQL + '' INCLUDE ('' + @IncludedColumnList + '')''; ' +
               'END ' +
               'SET @SQL = @SQL + '' WITH (PAD_INDEX = '' + CASE WHEN @IsPadded = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + ' +
               '''STATISTICS_NORECOMPUTE = '' + CASE WHEN @STATISTICS_NORECOMPUTE = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + ' +
               '''SORT_IN_TEMPDB = '' + CASE WHEN @SORT_IN_TEMPDB = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + ' +
               '''DROP_EXISTING = '' + CASE WHEN @DROP_EXISTING = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + ' +
               '''ONLINE = '' + CASE WHEN @ONLINE = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + ' +
               '''ALLOW_ROW_LOCKS = '' + CASE WHEN @AllowRowLocks = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + ' +
               '''ALLOW_PAGE_LOCKS = '' + CASE WHEN @AllowPageLocks = 1 THEN ''ON'' ELSE ''OFF'' END + '', '' + ' +
               '''OPTIMIZE_FOR_SEQUENTIAL_KEY = '' + CASE WHEN @OPTIMIZE_FOR_SEQUENTIAL_KEY = 1 THEN ''ON'' ELSE ''OFF'' END + '')''; ' +
               'SET @SQL = @SQL + '' ON '' + CASE WHEN @DataSpaceId = 1 THEN ''[PRIMARY]'' ELSE ''[SECONDARY]'' END; ' +
               'INSERT INTO #IndexScripts (DatabaseName, TableName, IndexScript) ' +
               'VALUES (@DatabaseName, @TableName, @SQL); ' +
               'FETCH NEXT FROM IndexCursor INTO @TableName, @IndexName, @IndexId, @IsUnique, @IsClustered, @HasFilter, @FilterDefinition, @FF, @IgnoreDupKey, @IsPadded, @IsDisabled, @AllowPageLocks, @AllowRowLocks, @DataSpaceId; ' +
               'END; ' +
               'CLOSE IndexCursor; ' +
               'DEALLOCATE IndexCursor;'

    -- Execute the SQL
    EXEC sp_executesql @SQL, N'@DatabaseName NVARCHAR(128), @TableName NVARCHAR(128), @IndexName NVARCHAR(128), @IndexId INT, @IsUnique BIT, @IsClustered BIT, @HasFilter BIT, @FilterDefinition NVARCHAR(MAX), @FF INT, @IgnoreDupKey BIT, @IsPadded BIT, @IsDisabled BIT, @AllowPageLocks BIT, @AllowRowLocks BIT, @DataSpaceId INT, @ColumnList NVARCHAR(MAX), @IncludedColumnList NVARCHAR(MAX), @STATISTICS_NORECOMPUTE BIT, @SORT_IN_TEMPDB BIT, @DROP_EXISTING BIT, @ONLINE BIT, @OPTIMIZE_FOR_SEQUENTIAL_KEY BIT', 
                        @DatabaseName, @TableName, @IndexName, @IndexId, @IsUnique, @IsClustered, @HasFilter, @FilterDefinition, @FF, @IgnoreDupKey, @IsPadded, @IsDisabled, @AllowPageLocks, @AllowRowLocks, @DataSpaceId, @ColumnList, @IncludedColumnList, @STATISTICS_NORECOMPUTE, @SORT_IN_TEMPDB, @DROP_EXISTING, @ONLINE, @OPTIMIZE_FOR_SEQUENTIAL_KEY

    FETCH NEXT FROM DatabaseCursor INTO @DatabaseName
END

CLOSE DatabaseCursor
DEALLOCATE DatabaseCursor

-- Select from the temporary table
SELECT * FROM #IndexScripts
ORDER BY DatabaseName, TableName, IndexScript
