CREATE PROCEDURE dbo.FindMissingIndexes
    @DatabaseName NVARCHAR(128)
AS
BEGIN
    DECLARE @SQL NVARCHAR(MAX)

    -- Initialize the dynamic SQL to find missing indexes
    SET @SQL = '
    USE ' + QUOTENAME(@DatabaseName) + ';
    
    SELECT
        DB_NAME(database_id) AS DatabaseName,
        OBJECT_SCHEMA_NAME(mid.[object_id], mid.database_id) AS SchemaName,
        OBJECT_NAME(mid.[object_id], mid.database_id) AS TableName,
        mid.equality_columns AS EqualityColumns,
        mid.inequality_columns AS InequalityColumns,
        mid.included_columns AS IncludedColumns,
        migs.unique_compiles AS UniqueCompiles,
        migs.user_seeks AS UserSeeks,
        migs.user_scans AS UserScans,
        migs.last_user_seek AS LastUserSeek,
        migs.last_user_scan AS LastUserScan,
        migs.avg_total_user_cost AS AvgTotalUserCost,
        migs.avg_user_impact AS AvgUserImpact,
        ''CREATE INDEX IX_'' + OBJECT_NAME(mid.[object_id], mid.database_id) + ''_'' + REPLACE(REPLACE(REPLACE(mid.equality_columns, '','', ''_''), ''['', ''''), '']'', '''') + '' ON '' + OBJECT_SCHEMA_NAME(mid.[object_id], mid.database_id) + ''.'' + OBJECT_NAME(mid.[object_id], mid.database_id) + '' ('' + ISNULL(mid.equality_columns, '''') +
        CASE WHEN mid.equality_columns IS NOT NULL AND mid.inequality_columns IS NOT NULL THEN '','' ELSE '''' END +
        ISNULL(mid.inequality_columns, '''') + '')'' +
        ISNULL('' INCLUDE ('' + mid.included_columns + '')'', '''') AS CreateIndexStatement
    FROM
        sys.dm_db_missing_index_group_stats AS migs
        INNER JOIN sys.dm_db_missing_index_groups AS mig ON migs.group_handle = mig.index_group_handle
        INNER JOIN sys.dm_db_missing_index_details AS mid ON mig.index_handle = mid.index_handle
    WHERE
        mid.database_id = DB_ID(@DatabaseName)
    ORDER BY
        migs.avg_user_impact DESC;
    '

    -- Execute the dynamic SQL
    EXEC sp_executesql @SQL, N'@DatabaseName NVARCHAR(128)', @DatabaseName
END
